
#############################################################################
                    CURSO DE BASES DE DATOS CON SQLITE
#############################################################################
FUNCION PARA CREAR BASE DE DATOS
sqlite3 -init sqlite.sql


#############################################################################
                    FORMAS DE CREAR TABLAS CON SUS RESPECTIVOS DATOS
#############################################################################
# CREAR TABLA CON CONDICIONES

CREATE TABLE IF NOT EXISTS NOMBRE_TABLA(
ID INTEGER (LONGITUD) PRIMARY KEY,
NOMBRE TEXT (LONGITUD),
APELLIDO TEXT (LONGITUD)
)
# CREAR TABLA SIN CONDICIONES

CREATE TABLE NOMBRE_TABLA(
ID INTEGER (LONGITUD) PRIMARY KEY,
NOMBRE TEXT (LONGITUD),
APELLIDO TEXT (LONGITUD)
)

# CREAR TABLA CON MULTIPLES PRIMARY KEY

CREATE TABLE NOMBRE_TABLA(
ID INTEGER (LONGITUD),
NOMBRE TEXT (LONGITUD),
APELLIDO TEXT (LONGITUD),
EMAIL TEXT (LONGITUD),
PRIMARY KEY (ID, NOMBRE, APELLIDO)
)


/////////////////////////////////////////////////////////////////////////////
# EJEMPLOS REALES DE CREAR TABLA

CREATE TABLE IF NOT EXISTS USUARIOS (
ID INTEGER (10) PRIMARY KEY,
NOMBRE TEXT (50),
APELLIDO TEXT (50),
EMAIL TEXT (50)
);


#############################################################################
                        INSERTAR DATOS EN TABLAS
#############################################################################
# INSERTA DATOS

INSERT INTO NOMBRE_TABLA (ID, COLUMNA_1, COLUMNA_2) VALUES (1, 'VALOR_1', 'VALOR_2');

INSERT INTO NOMBRE_TABLA VALUES (1, 'VALOR_1', 'VALOR_2');

/////////////////////////////////////////////////////////////////////////////
EJEMPLOS REALES DE INSERTAR DATOS

INSERT INTO USUARIOS (ID, NOMBRE, APELLIDO, EMAIL) VALUES
(1, 'JUAN', 'PEREZ', 'j@j.com');

INSERT INTO CLIENTES(NOMBRE, APELLIDO, EMAIL, EDAD, NUMERO_COMPRAS) VALUES
('JUAN', 'PEREZ', 'j@j.com', 25, 5),
('DANIEL', 'GONZALEZ', 'd@d.com', 16, 25),
('PEREZ', 'DANIEL', 'p@p.com', 18, 47),
('DANIEL', 'PEREZ', 'd@d.com', 45, 80),
('ESTEVE', 'GINES', 'e@d.com', 32, 35)

#############################################################################
                        CONSULTAR O SELECIONAR DATOS EN TABLAS
#############################################################################
# CONSULTA TODOS LOS DATOS DE LA TABLA

SELECT * FROM NOMBRE_TABLA;

# CONSULTA COLUMNA_1 Y COLUMNA_2

SELECT COLUMNA_1, COLUMNA_2 FROM NOMBRE_TABLA;

# CONSULTA UNA UNICA COLUMNA CON VALORES ESTABLECIDO

SELECT * FROM NOMBRE_TABLA WHERE COLUMNA_1 = 'VALOR_1';

# CONSULTA VARIAS COLUMNAS CON VALORES ESTABLECIDOS

SELECT * FROM NOMBRE_TABLA WHERE COLUMNA_1 = 'VALOR_1' AND COLUMNA_2 = 'VALOR_2';

# SELECCIONA DISTINTOS SIN REPETIRLOS

SELECT DISTINCT COLUMNA_1 FROM NOMBRE_TABLA;

# SELECCIONA DISTINTOS CON VALORES ESTABLECIDOS
SELECT DISTINCT COLUMNA_1 FROM NOMBRE_TABLA WHERE COLUMNA_1 = 'VALOR_1' AND COLUMNA_2 = 'VALOR_2';

# CON ORDER BY

SELECT * FROM NOMBRE_TABLA ORDER BY COLUMNA_1;

# CON ORDER BY DESCENDENTE

SELECT * FROM NOMBRE_TABLA ORDER BY COLUMNA_1 DESC;

# CON ORDER BY ASCENDENTE

SELECT * FROM NOMBRE_TABLA ORDER BY COLUMNA_1 ASC;

# CON ORDER BY DESCENDENTE Y ASCENDENTE

SELECT * FROM NOMBRE_TABLA ORDER BY COLUMNA_1 DESC, COLUMNA_2 ASC;

# CON LIMIT

SELECT * FROM NOMBRE_TABLA LIMIT 10;

# CON LIMIT Y ORDER BY

SELECT * FROM NOMBRE_TABLA LIMIT 10 ORDER BY COLUMNA_1;

# CONTAR LOS DATOS

SELECT COUNT(*) FROM NOMBRE_TABLA

SELECT COUNT (DISTINCT COLUMNA_1) FROM NOMBRE_TABLA

# BETWEEN

SELECT * FROM NOMBRE_TABLA WHERE COLUMNA_1 BETWEEN 'VALOR_1' AND 'VALOR_2';

# CON OR Y AND

SELECT * FROM NOMBRE_TABLA WHERE COLUMNA_1 = 'VALOR_1' OR COLUMNA_2 = 'VALOR_2' AND COLUMNA_3 = 'VALOR_3';

# CON NOT

SELECT * FROM NOMBRE_TABLA WHERE NOT COLUMNA_1 = 'VALOR_1';

# CON IN

SELECT * FROM NOMBRE_TABLA WHERE COLUMNA_1 IN ('VALOR_1', 'VALOR_2');


/////////////////////////////////////////////////////////////////////////////
EJEMPLOS REALES DE CONSULTAR DATOS

SELECT * FROM USUARIOS;
SELECT NOMBRE, APELLIDO FROM USUARIOS;
SELECT * FROM USUARIOS WHERE EMAIL = 'j@j.com';
SELECT * FROM USUARIOS WHERE NOMBRE = 'JUAN' AND APELLIDO = 'PEREZ';
SELECT CORREO FROM USUARIOS WHERE ID = 1;
SELECT DISTINCT CORREO FROM USUARIOS
SELECT NOMBRE, EDAD FROM USUARIOS ORDER BY EDAD DESC;
SELECT NOMBRE, EDAD FROM USUARIOS ORDER BY EDAD ASC LIMIT 10;
SELECT DISTINCT NOMBRE FROM USUARIOS ORDER BY NOMBRE DESC
SELECT DISTINCT EDAD FROM USUARIOS ORDER BY EDAD DESC LIMIT 10
SELECT COUNT(DISTINCT NOMBRE) FROM USUARIOS
SELECT COUNT(*) FROM USUARIOS
SELECT COUNT (EMAIL) FROM USUARIOS
SELECT ID, FECHA_NACIMIENTO FROM USUARIOS
SELECT EMAIL FROM USUARIOS WHERE EDAD > 25
USUARIOS WHERE NUMERO_COMPRAS > 12
SELECT COUNT(*) FROM USUARIOS WHERE NUMERO_COMPRAS >= 30
SELECT ID FROM USUARIOS ORDER BY NUMERO_COMPRAS --ORDENA POR NUMERO DE COMPRAS
SELECT ID FROM USUARIOS ORDER BY NUMERO_COMPRAS DESC LIMIT 1 --TOMA EL MAYOR
SELECT ID FROM USUARIOS WHERE NUMERO_COMPRAS = (SELECT MAX(NUMERO_COMPRAS) FROM USUARIOS)--TOMA EL MAYOR
SELECT ID FROM USUARIOS WHERE NUMERO_COMPRAS != 99
SELECT COUNT(ID) FROM USUARIOS WHERE NUMERO_COMPRAS BETWEEN 30 AND 50 --UTILIZA BETWEEN ENTRE 30 Y 51 (30>= X =<50)
SELECT * FROM USUARIOS WHERE NOMBRE = 'JUAN' OR NOMBRE = 'PEREZ' OR NOMBRE = 'DANIEL' -- CON CONDICIONALES
SELECT ID, NOMBRE, APELLIDO, EMAIL,NUMERO_COMPRAS FROM USUARIOS WHERE (NUMERO_COMPRAS > 5 AND ID > 2)
SELECT ID, NOMBRE, APELLIDO, EMAIL,NUMERO_COMPRAS FROM USUARIOS WHERE (NOMBRE = 'JUAN' OR APELLIDO = 'GONZALEZ' OR NOMBRE = 'DANIEL')
SELECT * FROM CLIENTES WHERE NUMERO_COMPRAS IS NULL  #IMPORTANTE CUANDO SE UTILIZA IS CUANDO SE ESTABLECE UN VALOR NULL
#############################################################################
                        ACTUALIZAR DATOS EN TABLAS
#############################################################################
# ACTUALIZA COLUMNA_1 = VALOR_1

UPDATE NOMBRE_TABLA SET COLUMNA_1 = 'VALOR_1' WHERE COLUMNA_1 = 'VALOR_1';

# ACTUALIZA COLUMNA_1 = VALOR_1 Y COLUMNA_2 = VALOR_2

UPDATE NOMBRE_TABLA SET COLUMNA_1 = 'VALOR_1', COLUMNA_2 = 'VALOR_2' WHERE COLUMNA_1 = 'VALOR_1' AND COLUMNA_2 = 'VALOR_2';

/////////////////////////////////////////////////////////////////////////////
EJEMPLOS REALES DE ACTUALIZAR DATOS

UPDATE USUARIOS SET EMAIL = 'j@j.com' WHERE EMAIL = 'j@j.com';

UPDATE USUARIOS SET NOMBRE = 'JUAN', APELLIDO = 'PEREZ' WHERE NOMBRE = 'JUAN' AND APELLIDO = 'PEREZ';

#############################################################################
                        ELIMINAR DATOS EN TABLAS
#############################################################################
# ELIMINA COLUMNA_1 = VALOR_1

DELETE FROM NOMBRE_TABLA WHERE COLUMNA_1 = 'VALOR_1';

# ELIMINA COLUMNA_1 = VALOR_1 Y COLUMNA_2 = VALOR_2

DELETE FROM NOMBRE_TABLA WHERE COLUMNA_1 = 'VALOR_1' AND COLUMNA_2 = 'VALOR_2';

# ELIMINA UNA COLUMNA

DROP COLUMN COLUMNA;


/////////////////////////////////////////////////////////////////////////////
# EJEMPLOS REALES DE ELIMINAR DATOS

DELETE FROM USUARIOS WHERE EMAIL = 'j@j.com';

DELETE FROM USUARIOS WHERE NOMBRE = 'JUAN' AND APELLIDO = 'PEREZ';

#############################################################################
                        ALTERAR TABLAS
#############################################################################
# ALTERA TABLA

ALTER TABLE NOMBRE_TABLA RENAME TO NOMBRE_TABLA_NUEVO;

# ALTERA TABLA COLUMNA_1 A COLUMNA_2

ALTER TABLE NOMBRE_TABLA RENAME COLUMNA_1 TO COLUMNA_2;

# ALTERA TABLA COLUMNA_1 A COLUMNA_2 Y COLUMNA_3 A COLUMNA_4

ALTER TABLE NOMBRE_TABLA RENAME COLUMNA_1 TO COLUMNA_2, COLUMNA_3 TO COLUMNA_4;

# AGREGA UNA COLUMNA

ALTER TABLE NOMBRE_TABLA ADD COLUMNA TEXT (LONGITUD);

# AGREGA UNA PRIMARY KEY

ALTER TABLE NOMBRE_TABLA ADD PRIMARY KEY (COLUMNA_1, COLUMNA_2, COLUMNA_3);

# ELIMINA UNA PRIMARY KEY

ALTER TABLE NOMBRE_TABLA DROP PRIMARY KEY;

/////////////////////////////////////////////////////////////////////////////
# EJEMPLOS REALES DE ALTERAR TABLA

ALTER TABLE USUARIOS RENAME TO USUARIOS_NUEVO;

ALTER TABLE USUARIOS RENAME NOMBRE TO EMAIL;

ALTER TABLE USUARIOS RENAME NOMBRE TO EMAIL, APELLIDO TO NOMBRE;

ALTER TABLE USUARIOS RENAME NOMBRE TO EMAIL, APELLIDO TO NOMBRE, EMAIL TO APELLIDO;

ALTER TABLE USUARIOS ADD EMAIL TEXT (50);
#############################################################################

#############################################################################
                        COMPARADORES
#############################################################################
# COMPARA VALOR_1 = VALOR_2
